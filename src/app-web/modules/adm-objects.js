/// DECLARATIONS //////////////////////////////////////////////////////////////
/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
const DBG = true;
const PKG = 'ADMObj'; // prefix for console.log

/// MODULE DECLARATION ////////////////////////////////////////////////////////
/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
/**
 * @module ADMObj
 * @desc
 * A centralized object factory for classroom administration.
 */
/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
const ADMObj = {}; // module object to export

/**
 *  @return {Object} Returns a new teacher data object
 */
ADMObj.Teacher = data => {
  return {
    id: data.id,
    name: data.name
  };
};

/**
 *  @return {Object} Returns a new classroom data object
 */
ADMObj.Classroom = data => {
  if (data.teacherId === undefined) throw Error('Classroom requires a teacherId!');
  return {
    id: data.id,
    teacherId: data.teacherId,
    name: data.name || 'Untitled',
    canViewOthers: data.canViewOthers || false
  };
};

/**
 *  @return {Object} Returns a new group data object
 */
ADMObj.Group = data => {
  if (data.classroomId === undefined) throw Error('Group requires a classroomId!');
  return {
    id: data.id,
    classroomId: data.classroomId,
    name: data.name || 'Untitled',
    students: data.students || []
  };
};

/**
 *  @param {Object} data - Initial data for the model
 *                        `groupId` is required.
 *  @return {Object} Returns a new model object
 */
ADMObj.Model = data => {
  if (data.groupId === undefined) throw Error('Model requires a groupId!');
  const model = {
    id: data.id || undefined, // id is generated by DB
    title: data.title || 'Untitled',
    groupId: data.groupId,
    dateCreated: data.dateCreated || new Date(),
    dateModified: data.dateModified || new Date(),
    pmcDataId: data.pmcDataId || undefined,
    deleted: false
  };
  return model;
};

/**
 *  Returns a new pmcData data object (used in models)
 */
ADMObj.ModelPMCData = () => {
  return { entities: [], comments: [], markedread: [], urcomments: [], urcomments_readby: [], visuals: [] };
};

/**
 *  @return {Object} Returns a new criterion data object
 */
ADMObj.Criterion = data => {
  if (data.classroomId === undefined) throw Error('Criteria requires a classroomId!');
  return {
    id: data.id,
    classroomId: data.classroomId,
    label: data.label || '', // default to prevent uncontrolled component
    description: data.description || '' // default to prevent uncontrolled component
  };
};

/**
 *  @return {Object} Returns a new sentenceStarter data object
 */
ADMObj.SentenceStarter = data => {
  if (data.classroomId === undefined) throw Error('SentenceStarter requires a classroomId!');
  return {
    id: data.id,
    classroomId: data.classroomId,
    sentences: data.sentences || '' // default to prevent uncontrolled component
  };
};

/**
 *  @return {Object} Returns a new ratings definition data object
 */
ADMObj.RatingsDefinition = data => {
  if (data.classroomId === undefined) throw Error('RatingsDefinition requires a classroomId!');
  return {
    id: data.id,
    classroomId: data.classroomId,
    definitions: data.definitions || []
  };
};

/**
 *  @return {Object} Returns a new Resource data object
 */
ADMObj.Resource = (data = {}) => {
  return {
    id: data.id,
    referenceLabel: data.referenceLabel,
    label: data.label || '',
    notes: data.notes || '',
    type: data.type || '',
    url: data.url || '',
    links: data.links || 0
  };
};

/**
 *  @return {Object} Returns a new classroom resource data object
 */
ADMObj.ClassroomResource = data => {
  if (data.classroomId === undefined) throw Error('ClassroomResource requires a classroomId!');
  return {
    id: data.id,
    classroomId: data.classroomId,
    resources: data.resources || []
  };
};

/// EXPORTS ///////////////////////////////////////////////////////////////////
/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
export default ADMObj;
